"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8127],{5318:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var a=n(7378);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),c=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(i.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),d=r,g=p["".concat(i,".").concat(d)]||p[d]||m[d]||l;return n?a.createElement(g,o(o({ref:t},u),{},{components:n})):a.createElement(g,o({ref:t},u))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[p]="string"==typeof e?e:r,o[1]=s;for(var c=2;c<l;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9798:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7378),r=n(8944);const l={tabItem:"tabItem_wHwb"};function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l.tabItem,o),hidden:n},t)}},3930:(e,t,n)=>{n.d(t,{Z:()=>w});var a=n(5773),r=n(7378),l=n(8944),o=n(3457),s=n(3620),i=n(654),c=n(784),u=n(1819);function p(e){return function(e){return r.Children.map(e,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function m(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??p(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function d(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:n}=e;const a=(0,s.k6)(),l=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,i._X)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(a.location.search);t.set(l,e),a.replace({...a.location,search:t.toString()})}),[l,a])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,l=m(e),[o,s]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:l}))),[i,c]=g({queryString:n,groupId:a}),[p,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,l]=(0,u.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&l.set(e)}),[n,l])]}({groupId:a}),h=(()=>{const e=i??p;return d({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{h&&s(h)}),[h]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!d({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);s(e),c(e),f(e)}),[c,f,l]),tabValues:l}}var h=n(6457);const b={tabList:"tabList_J5MA",tabItem:"tabItem_l0OV"};function y(e){let{className:t,block:n,selectedValue:s,selectValue:i,tabValues:c}=e;const u=[],{blockElementScrollPositionUntilNextRender:p}=(0,o.o5)(),m=e=>{const t=e.currentTarget,n=u.indexOf(t),a=c[n].value;a!==s&&(p(t),i(a))},d=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":n},t)},c.map((e=>{let{value:t,label:n,attributes:o}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>u.push(e),onKeyDown:d,onClick:m},o,{className:(0,l.Z)("tabs__item",b.tabItem,o?.className,{"tabs__item--active":s===t})}),n??t)})))}function k(e){let{lazy:t,children:n,selectedValue:a}=e;if(n=Array.isArray(n)?n:[n],t){const e=n.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},n.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function v(e){const t=f(e);return r.createElement("div",{className:(0,l.Z)("tabs-container",b.tabList)},r.createElement(y,(0,a.Z)({},e,t)),r.createElement(k,(0,a.Z)({},e,t)))}function w(e){const t=(0,h.Z)();return r.createElement(v,(0,a.Z)({key:String(t)},e))}},6890:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>g,frontMatter:()=>s,metadata:()=>c,toc:()=>p});var a=n(5773),r=(n(7378),n(5318)),l=n(3930),o=n(9798);const s={sidebar_position:3,sidebar_label:"Integrations"},i="Integrations: LLMs",c={unversionedId:"modules/models/llms/integrations",id:"modules/models/llms/integrations",title:"Integrations: LLMs",description:"LangChain offers a number of LLM implementations that integrate with various model providers. These are:",source:"@site/docs/modules/models/llms/integrations.mdx",sourceDirName:"modules/models/llms",slug:"/modules/models/llms/integrations",permalink:"/langchainjs/docs/modules/models/llms/integrations",draft:!1,editUrl:"https://github.com/hwchase17/langchainjs/docs/modules/models/llms/integrations.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,sidebar_label:"Integrations"},sidebar:"sidebar",previous:{title:"LLMs",permalink:"/langchainjs/docs/modules/models/llms/"},next:{title:"Additional Functionality",permalink:"/langchainjs/docs/modules/models/llms/additional_functionality"}},u={},p=[{value:"<code>OpenAI</code>",id:"openai",level:2},{value:"<code>HuggingFaceInference</code>",id:"huggingfaceinference",level:2},{value:"<code>Cohere</code>",id:"cohere",level:2},{value:"<code>Replicate</code>",id:"replicate",level:2},{value:"Additional LLM Implementations",id:"additional-llm-implementations",level:2},{value:"<code>PromptLayerOpenAI</code>",id:"promptlayeropenai",level:3}],m={toc:p},d="wrapper";function g(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"integrations-llms"},"Integrations: LLMs"),(0,r.kt)("p",null,"LangChain offers a number of LLM implementations that integrate with various model providers. These are:"),(0,r.kt)("h2",{id:"openai"},(0,r.kt)("inlineCode",{parentName:"h2"},"OpenAI")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { OpenAI } from "langchain/llms";\n\nconst model = new OpenAI({ temperature: 0.9 });\nconst res = await model.call(\n  "What would be a good company name a company that makes colorful socks?"\n);\nconsole.log({ res });\n')),(0,r.kt)("h2",{id:"huggingfaceinference"},(0,r.kt)("inlineCode",{parentName:"h2"},"HuggingFaceInference")),(0,r.kt)(l.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"npm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @huggingface/inference\n"))),(0,r.kt)(o.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @huggingface/inference\n")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { HuggingFaceInference } from "langchain/llms";\n\nconst model = new HuggingFaceInference({ model: "gpt2" });\nconst res = await model.call("1 + 1 =");\nconsole.log({ res });\n')),(0,r.kt)("h2",{id:"cohere"},(0,r.kt)("inlineCode",{parentName:"h2"},"Cohere")),(0,r.kt)(l.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"npm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install cohere-ai\n"))),(0,r.kt)(o.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add cohere-ai\n")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { Cohere } from "langchain/llms";\n\nconst model = new Cohere({ maxTokens: 20 });\nconst res = await model.call(\n  "What would be a good company name a company that makes colorful socks?"\n);\nconsole.log({ res });\n')),(0,r.kt)("h2",{id:"replicate"},(0,r.kt)("inlineCode",{parentName:"h2"},"Replicate")),(0,r.kt)(l.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"npm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install replicate\n"))),(0,r.kt)(o.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add replicate\n")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { Replicate } from "langchain/llms";\n\nconst model = new Replicate({\n  model:\n    "daanelson/flan-t5:04e422a9b85baed86a4f24981d7f9953e20c5fd82f6103b74ebc431588e1cec8",\n});\nconst res = await modelA.call(\n  "What would be a good company name a company that makes colorful socks?"\n);\nconsole.log({ res });\n')),(0,r.kt)("h2",{id:"additional-llm-implementations"},"Additional LLM Implementations"),(0,r.kt)("h3",{id:"promptlayeropenai"},(0,r.kt)("inlineCode",{parentName:"h3"},"PromptLayerOpenAI")),(0,r.kt)("p",null,"LangChain integrates with PromptLayer for logging and debugging prompts and responses. To add support for PromptLayer:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Create a PromptLayer account here: ",(0,r.kt)("a",{parentName:"li",href:"https://promptlayer.com"},"https://promptlayer.com"),"."),(0,r.kt)("li",{parentName:"ol"},"Create an API token and pass it either as ",(0,r.kt)("inlineCode",{parentName:"li"},"promptLayerApiKey")," argument in the ",(0,r.kt)("inlineCode",{parentName:"li"},"PromptLayerOpenAI")," constructor or in the ",(0,r.kt)("inlineCode",{parentName:"li"},"PROMPTLAYER_API_KEY")," environment variable.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'const model = new PromptLayerOpenAI({ temperature: 0.9 });\nconst res = await model.call(\n  "What would be a good company name a company that makes colorful socks?"\n);\n')),(0,r.kt)("p",null,"The request and the response will be logged in the ",(0,r.kt)("a",{parentName:"p",href:"https://promptlayer.com/home"},"PromptLayer dashboard"),"."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Note:"))," In streaming mode PromptLayer will not log the response.")))}g.isMDXComponent=!0}}]);