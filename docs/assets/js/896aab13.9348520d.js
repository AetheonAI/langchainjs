"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5544],{5318:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),g=a,m=u["".concat(l,".").concat(g)]||u[g]||d[g]||o;return n?r.createElement(m,i(i({ref:t},c),{},{components:n})):r.createElement(m,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=g;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},8395:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=n(5773),a=(n(7378),n(5318));const o={},i="Agent with Zapier NLA Integration",s={unversionedId:"modules/agents/tools/zapier_agent",id:"modules/agents/tools/zapier_agent",title:"Agent with Zapier NLA Integration",description:"Full docs here//nla.zapier.com/api/v1/dynamic/docs",source:"@site/docs/modules/agents/tools/zapier_agent.md",sourceDirName:"modules/agents/tools",slug:"/modules/agents/tools/zapier_agent",permalink:"/langchainjs/docs/modules/agents/tools/zapier_agent",draft:!1,editUrl:"https://github.com/hwchase17/langchainjs/docs/modules/agents/tools/zapier_agent.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Integrations",permalink:"/langchainjs/docs/modules/agents/tools/integrations/"},next:{title:"Toolkits",permalink:"/langchainjs/docs/modules/agents/toolkits/"}},l={},p=[],c={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"agent-with-zapier-nla-integration"},"Agent with Zapier NLA Integration"),(0,a.kt)("p",null,"Full docs here: ",(0,a.kt)("a",{parentName:"p",href:"https://nla.zapier.com/api/v1/dynamic/docs"},"https://nla.zapier.com/api/v1/dynamic/docs")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Zapier Natural Language Actions")," gives you access to the 5k+ apps, 20k+ actions on Zapier's platform through a natural language API interface."),(0,a.kt)("p",null,"NLA supports apps like Gmail, Salesforce, Trello, Slack, Asana, HubSpot, Google Sheets, Microsoft Teams, and thousands more apps: ",(0,a.kt)("a",{parentName:"p",href:"https://zapier.com/apps"},"https://zapier.com/apps")),(0,a.kt)("p",null,"Zapier NLA handles ALL the underlying API auth and translation from natural language --\x3e underlying API call --\x3e return simplified output for LLMs. The key idea is you, or your users, expose a set of actions via an oauth-like setup window, which you can then query and execute via a REST API."),(0,a.kt)("p",null,"NLA offers both API Key and OAuth for signing NLA API requests."),(0,a.kt)("p",null,"Server-side (API Key): for quickly getting started, testing, and production scenarios where LangChain will only use actions exposed in the developer's Zapier account (and will use the developer's connected accounts on Zapier.com)"),(0,a.kt)("p",null,"User-facing (Oauth): for production scenarios where you are deploying an end-user facing application and LangChain needs access to end-user's exposed actions and connected accounts on Zapier.com"),(0,a.kt)("p",null,"This quick start will focus on the server-side use case for brevity. Review full docs or reach out to ",(0,a.kt)("a",{parentName:"p",href:"mailto:nla@zapier.com"},"nla@zapier.com")," for user-facing oauth developer support."),(0,a.kt)("p",null,"This example goes over how to use the Zapier integration an Agent. In code, below:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'import { OpenAI } from "langchain";\nimport { initializeAgentExecutor, ZapierToolKit } from "langchain/agents";\nimport { ZapierNLAWrapper } from "langchain/tools";\n\nexport const run = async () => {\n  const model = new OpenAI({ temperature: 0 });\n  const zapier = new ZapierNLAWrapper();\n  const toolkit = await ZapierToolKit.fromZapierNLAWrapper(zapier);\n\n  const executor = await initializeAgentExecutor(\n    toolkit.tools,\n    model,\n    "zero-shot-react-description",\n    true\n  );\n  console.log("Loaded agent.");\n\n  const input = `Summarize the last email I received regarding Silicon Valley Bank. Send the summary to the #test-zapier Slack channel.`;\n\n  console.log(`Executing with input "${input}"...`);\n\n  const result = await executor.call({ input });\n\n  console.log(`Got output ${result.output}`);\n};\n')))}d.isMDXComponent=!0}}]);