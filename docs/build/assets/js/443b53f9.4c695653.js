"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8547],{5318:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>y});var n=t(7378);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function m(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=n.createContext({}),i=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):m(m({},r),e)),t},c=function(e){var r=i(e.components);return n.createElement(s.Provider,{value:r},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=i(t),f=o,y=u["".concat(s,".").concat(f)]||u[f]||p[f]||a;return t?n.createElement(y,m(m({ref:r},c),{},{components:t})):n.createElement(y,m({ref:r},c))}));function y(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,m=new Array(a);m[0]=f;var l={};for(var s in r)hasOwnProperty.call(r,s)&&(l[s]=r[s]);l.originalType=e,l[u]="string"==typeof e?e:o,m[1]=l;for(var i=2;i<a;i++)m[i]=t[i];return n.createElement.apply(null,m)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},7011:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>m,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>i});var n=t(5773),o=(t(7378),t(5318));const a={},m="Buffer Memory",l={unversionedId:"modules/memory/examples/buffer_memory",id:"modules/memory/examples/buffer_memory",title:"Buffer Memory",description:"BufferMemory is the simplest type of memory - it just remembers previous conversational back and forths directly.",source:"@site/docs/modules/memory/examples/buffer_memory.md",sourceDirName:"modules/memory/examples",slug:"/modules/memory/examples/buffer_memory",permalink:"/langchainjs/docs/modules/memory/examples/buffer_memory",draft:!1,editUrl:"https://github.com/hwchase17/langchainjs/docs/modules/memory/examples/buffer_memory.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Examples",permalink:"/langchainjs/docs/modules/memory/examples/"},next:{title:"Memory",permalink:"/langchainjs/docs/modules/memory/examples/buffer_memory_chat"}},s={},i=[],c={toc:i},u="wrapper";function p(e){let{components:r,...t}=e;return(0,o.kt)(u,(0,n.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"buffer-memory"},"Buffer Memory"),(0,o.kt)("p",null,"BufferMemory is the simplest type of memory - it just remembers previous conversational back and forths directly."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'import { OpenAI } from "langchain/llms";\nimport { BufferMemory } from "langchain/memory";\nimport { ConversationChain } from "langchain/chains";\n\nconst model = new OpenAI({});\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: "Hi! I\'m Jim." });\nconsole.log({ res1 });\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'{response: " Hi Jim! It\'s nice to meet you. My name is AI. What would you like to talk about?"}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'const res2 = await chain.call({ input: "What\'s my name?" });\nconsole.log({ res2 });\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"{response: ' You said your name is Jim. Is there anything else you would like to talk about?'}\n")))}p.isMDXComponent=!0}}]);