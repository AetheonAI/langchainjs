"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8770],{5318:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>f});var n=r(7378);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=l(r),p=o,f=m["".concat(c,".").concat(p)]||m[p]||u[p]||a;return r?n.createElement(f,i(i({ref:t},d),{},{components:r})):n.createElement(f,i({ref:t},d))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=p;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[m]="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},5162:(e,t,r)=>{r.d(t,{Z:()=>g});var n=r(7378),o=r(8944),a=r(5161),i=r(1884),s=r(5626),c=r(9213);const l={cardContainer:"cardContainer_H47c",cardTitle:"cardTitle_tTnA",cardDescription:"cardDescription_rTl4"};function d(e){let{href:t,children:r}=e;return n.createElement(i.Z,{href:t,className:(0,o.Z)("card padding--lg",l.cardContainer)},r)}function m(e){let{href:t,icon:r,title:a,description:i}=e;return n.createElement(d,{href:t},n.createElement("h2",{className:(0,o.Z)("text--truncate",l.cardTitle),title:a},r," ",a),i&&n.createElement("p",{className:(0,o.Z)("text--truncate",l.cardDescription),title:i},i))}function u(e){let{item:t}=e;const r=(0,a.Wl)(t);return r?n.createElement(m,{href:r,icon:"\ud83d\uddc3\ufe0f",title:t.label,description:(0,c.I)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription",description:"The default description for a category card in the generated index about how many items this category includes"},{count:t.items.length})}):null}function p(e){let{item:t}=e;const r=(0,s.Z)(t.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",o=(0,a.xz)(t.docId??void 0);return n.createElement(m,{href:t.href,icon:r,title:t.label,description:o?.description})}function f(e){let{item:t}=e;switch(t.type){case"link":return n.createElement(p,{item:t});case"category":return n.createElement(u,{item:t});default:throw new Error(`unknown item type ${JSON.stringify(t)}`)}}function h(e){let{className:t}=e;const r=(0,a.jA)();return n.createElement(g,{items:r.items,className:t})}function g(e){const{items:t,className:r}=e;if(!t)return n.createElement(h,e);const i=(0,a.MN)(t);return n.createElement("section",{className:(0,o.Z)("row",r)},i.map(((e,t)=>n.createElement("article",{key:t,className:"col col--6 margin-bottom--lg"},n.createElement(f,{item:e})))))}},6061:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var n=r(5773),o=(r(7378),r(5318)),a=r(5162);const i={sidebar_label:"Vector Stores",sidebar_position:3},s="Getting Started: Vector Stores",c={unversionedId:"modules/indexes/vector_stores/index",id:"modules/indexes/vector_stores/index",title:"Getting Started: Vector Stores",description:"Conceptual Guide",source:"@site/docs/modules/indexes/vector_stores/index.mdx",sourceDirName:"modules/indexes/vector_stores",slug:"/modules/indexes/vector_stores/",permalink:"/langchainjs/docs/modules/indexes/vector_stores/",draft:!1,editUrl:"https://github.com/hwchase17/langchainjs/docs/modules/indexes/vector_stores/index.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_label:"Vector Stores",sidebar_position:3},sidebar:"sidebar",previous:{title:"TokenTextSplitter",permalink:"/langchainjs/docs/modules/indexes/text_splitters/examples/token"},next:{title:"Integrations",permalink:"/langchainjs/docs/modules/indexes/vector_stores/integrations/"}},l={},d=[{value:"Which one to pick?",id:"which-one-to-pick",level:2},{value:"All Vector Stores",id:"all-vector-stores",level:2}],m={toc:d},u="wrapper";function p(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"getting-started-vector-stores"},"Getting Started: Vector Stores"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("a",{parentName:"p",href:"https://docs.langchain.com/docs/components/indexing/vectorstore"},"Conceptual Guide"))),(0,o.kt)("p",null,"A vector store is a particular type of database optimized for storing documents and their ",(0,o.kt)("a",{parentName:"p",href:"../../models/embeddings/"},"embeddings"),", and then fetching of the most relevant documents for a particular query, ie. those whose embeddings are most similar to the embedding of the query."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"interface VectorStore {\n  /**\n   * Add more documents to an existing VectorStore\n   */\n  addDocuments(documents: Document[]): Promise<void>;\n\n  /**\n   * Search for the most similar documents to a query\n   */\n  similaritySearch(\n    query: string,\n    k?: number,\n    filter?: object | undefined\n  ): Promise<Document[]>;\n\n  /**\n   * Search for the most similar documents to a query,\n   * and return their similarity score\n   */\n  similaritySearchWithScore(\n    query: string,\n    k = 4,\n    filter: object | undefined = undefined\n  ): Promise<[object, number][]>;\n\n  /**\n   * Turn a VectorStore into a Retriever\n   */\n  asRetriever(k?: number): BaseRetriever;\n\n  /**\n   * Advanced: Add more documents to an existing VectorStore,\n   * when you already have their embeddings\n   */\n  addVectors(vectors: number[][], documents: Document[]): Promise<void>;\n\n  /**\n   * Advanced: Search for the most similar documents to a query,\n   * when you already have the embedding of the query\n   */\n  similaritySearchVectorWithScore(\n    query: number[],\n    k: number,\n    filter?: object\n  ): Promise<[Document, number][]>;\n}\n")),(0,o.kt)("p",null,"You can create a vector store from a list of ",(0,o.kt)("a",{parentName:"p",href:"../../schema/document"},"Documents"),", or from a list of texts and their corresponding metadata. You can also create a vector store from an existing index, the signature of this method depends on the vector store you're using, check the documentation of the vector store you're interested in."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"abstract class BaseVectorStore implements VectorStore {\n  static fromTexts(\n    texts: string[],\n    metadatas: object[] | object,\n    embeddings: Embeddings,\n    dbConfig: Record<string, any>\n  ): Promise<VectorStore>;\n\n  static fromDocuments(\n    docs: Document[],\n    embeddings: Embeddings,\n    dbConfig: Record<string, any>\n  ): Promise<VectorStore>;\n}\n")),(0,o.kt)("h2",{id:"which-one-to-pick"},"Which one to pick?"),(0,o.kt)("p",null,"Here's a quick guide to help you pick the right vector store for your use case:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"If you're after something that can just run inside your application, in-memory, without any other servers to stand up, then go for ",(0,o.kt)("a",{parentName:"li",href:"./integrations/hnswlib"},"HNSWLib")),(0,o.kt)("li",{parentName:"ul"},"If you come from Python and you were looking for something similar to FAISS, pick ",(0,o.kt)("a",{parentName:"li",href:"./integrations/hnswlib"},"HNSWLib")),(0,o.kt)("li",{parentName:"ul"},"If you're looking for an open-source full-featured vector database that you can run locally in a docker container, then go for ",(0,o.kt)("a",{parentName:"li",href:"./integrations/chroma"},"Chroma")),(0,o.kt)("li",{parentName:"ul"},"If you're using Supabase already then look at the ",(0,o.kt)("a",{parentName:"li",href:"./integrations/supabase"},"Supabase")," vector store to use the same Postgres database for your embeddings too"),(0,o.kt)("li",{parentName:"ul"},"If you're looking for a production-ready vector store you don't have to worry about hosting yourself, then go for ",(0,o.kt)("a",{parentName:"li",href:"./integrations/pinecone"},"Pinecone"))),(0,o.kt)("h2",{id:"all-vector-stores"},"All Vector Stores"),(0,o.kt)(a.Z,{mdxType:"DocCardList"}))}p.isMDXComponent=!0}}]);