"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3774],{9798:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(7378),r=n(8944);const o={tabItem:"tabItem_wHwb"};function s(e){let{children:t,hidden:n,className:s}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o.tabItem,s),hidden:n},t)}},3930:(e,t,n)=>{n.d(t,{Z:()=>x});var a=n(5773),r=n(7378),o=n(8944),s=n(3457),l=n(3620),i=n(654),c=n(784),u=n(1819);function d(e){return function(e){return r.Children.map(e,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function m(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function b(e){let{queryString:t=!1,groupId:n}=e;const a=(0,l.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,i._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(a.location.search);t.set(o,e),a.replace({...a.location,search:t.toString()})}),[o,a])]}function h(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,o=m(e),[s,l]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[i,c]=b({queryString:n,groupId:a}),[d,h]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,o]=(0,u.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:a}),f=(()=>{const e=i??d;return p({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{f&&l(f)}),[f]);return{selectedValue:s,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),c(e),h(e)}),[c,h,o]),tabValues:o}}var f=n(6457);const v={tabList:"tabList_J5MA",tabItem:"tabItem_l0OV"};function g(e){let{className:t,block:n,selectedValue:l,selectValue:i,tabValues:c}=e;const u=[],{blockElementScrollPositionUntilNextRender:d}=(0,s.o5)(),m=e=>{const t=e.currentTarget,n=u.indexOf(t),a=c[n].value;a!==l&&(d(t),i(a))},p=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},c.map((e=>{let{value:t,label:n,attributes:s}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>u.push(e),onKeyDown:p,onClick:m},s,{className:(0,o.Z)("tabs__item",v.tabItem,s?.className,{"tabs__item--active":l===t})}),n??t)})))}function w(e){let{lazy:t,children:n,selectedValue:a}=e;if(n=Array.isArray(n)?n:[n],t){const e=n.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},n.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function y(e){const t=h(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",v.tabList)},r.createElement(g,(0,a.Z)({},e,t)),r.createElement(w,(0,a.Z)({},e,t)))}function x(e){const t=(0,f.Z)();return r.createElement(y,(0,a.Z)({key:String(t)},e))}},2073:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>b,contentTitle:()=>m,default:()=>g,frontMatter:()=>d,metadata:()=>p,toc:()=>h});var a=n(5773),r=(n(7378),n(5318)),o=n(3930),s=n(9798),l=n(6538);const i='import { HNSWLib } from "langchain/vectorstores";\nimport { OpenAIEmbeddings } from "langchain/embeddings";\n\nexport const run = async () => {\n  const vectorStore = await HNSWLib.fromTexts(\n    ["Hello world", "Bye bye", "hello nice world"],\n    [{ id: 2 }, { id: 1 }, { id: 3 }],\n    new OpenAIEmbeddings()\n  );\n\n  const resultOne = await vectorStore.similaritySearch("hello world", 1);\n  console.log(resultOne);\n};\n',c='import { HNSWLib } from "langchain/vectorstores";\nimport { OpenAIEmbeddings } from "langchain/embeddings";\nimport { TextLoader } from "langchain/document_loaders";\n\nexport const run = async () => {\n  // Create docs with a loader\n  const loader = new TextLoader(\n    "src/document_loaders/example_data/example.txt"\n  );\n  const docs = await loader.load();\n\n  // Load the docs into the vector store\n  const vectorStore = await HNSWLib.fromDocuments(docs, new OpenAIEmbeddings());\n\n  // Search for the most similar document\n  const resultOne = await vectorStore.similaritySearch("hello world", 1);\n  console.log(resultOne);\n};\n',u='import { HNSWLib } from "langchain/vectorstores";\nimport { OpenAIEmbeddings } from "langchain/embeddings";\n\nexport const run = async () => {\n  // Create a vector store through any method, here from texts as an example\n  const vectorStore = await HNSWLib.fromTexts(\n    ["Hello world", "Bye bye", "hello nice world"],\n    [{ id: 2 }, { id: 1 }, { id: 3 }],\n    new OpenAIEmbeddings()\n  );\n\n  // Save the vector store to a directory\n  const directory = "your/directory/here";\n  await vectorStore.save(directory);\n\n  // Load the vector store from the same directory\n  const loadedVectorStore = await HNSWLib.load(\n    directory,\n    new OpenAIEmbeddings()\n  );\n\n  // vectorStore and loadedVectorStore are identical\n\n  const result = await loadedVectorStore.similaritySearch("hello world", 1);\n  console.log(result);\n};\n',d={},m="HNSWLib",p={unversionedId:"modules/indexes/vector_stores/integrations/hnswlib",id:"modules/indexes/vector_stores/integrations/hnswlib",title:"HNSWLib",description:"HNSWLib is an in-memory vectorstore that can be saved to a file. It uses HNSWLib.",source:"@site/docs/modules/indexes/vector_stores/integrations/hnswlib.mdx",sourceDirName:"modules/indexes/vector_stores/integrations",slug:"/modules/indexes/vector_stores/integrations/hnswlib",permalink:"/langchainjs/docs/modules/indexes/vector_stores/integrations/hnswlib",draft:!1,editUrl:"https://github.com/hwchase17/langchainjs/docs/modules/indexes/vector_stores/integrations/hnswlib.mdx",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Chroma",permalink:"/langchainjs/docs/modules/indexes/vector_stores/integrations/chroma"},next:{title:"Pinecone",permalink:"/langchainjs/docs/modules/indexes/vector_stores/integrations/pinecone"}},b={},h=[{value:"Setup",id:"setup",level:2},{value:"Usage",id:"usage",level:2},{value:"Create a new index from texts",id:"create-a-new-index-from-texts",level:3},{value:"Create a new index from a loader",id:"create-a-new-index-from-a-loader",level:3},{value:"Save an index to a file and load it again",id:"save-an-index-to-a-file-and-load-it-again",level:3}],f={toc:h},v="wrapper";function g(e){let{components:t,...n}=e;return(0,r.kt)(v,(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"hnswlib"},"HNSWLib"),(0,r.kt)("p",null,"HNSWLib is an in-memory vectorstore that can be saved to a file. It uses ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/nmslib/hnswlib"},"HNSWLib"),"."),(0,r.kt)("h2",{id:"setup"},"Setup"),(0,r.kt)("p",null,"You can install it with"),(0,r.kt)(o.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"npm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install hnswlib-node\n"))),(0,r.kt)(s.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add hnswlib-node\n")))),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("h3",{id:"create-a-new-index-from-texts"},"Create a new index from texts"),(0,r.kt)(l.Z,{language:"typescript",mdxType:"CodeBlock"},i),(0,r.kt)("h3",{id:"create-a-new-index-from-a-loader"},"Create a new index from a loader"),(0,r.kt)(l.Z,{language:"typescript",mdxType:"CodeBlock"},c),(0,r.kt)("h3",{id:"save-an-index-to-a-file-and-load-it-again"},"Save an index to a file and load it again"),(0,r.kt)(l.Z,{language:"typescript",mdxType:"CodeBlock"},u))}g.isMDXComponent=!0}}]);