"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9524],{5318:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var o=n(7378);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},s=Object.keys(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),l=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=l(e.components);return o.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=l(n),d=r,f=u["".concat(c,".").concat(d)]||u[d]||m[d]||s;return n?o.createElement(f,a(a({ref:t},p),{},{components:n})):o.createElement(f,a({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,a=new Array(s);a[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[u]="string"==typeof e?e:r,a[1]=i;for(var l=2;l<s;l++)a[l]=n[l];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9298:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var o=n(5773),r=(n(7378),n(5318));const s={},a="VectorStore Agent Toolkit",i={unversionedId:"modules/agents/toolkits/examples/vectorstore",id:"modules/agents/toolkits/examples/vectorstore",title:"VectorStore Agent Toolkit",description:"This example shows how to load and use an agent with a vectorstore toolkit.",source:"@site/docs/modules/agents/toolkits/examples/vectorstore.md",sourceDirName:"modules/agents/toolkits/examples",slug:"/modules/agents/toolkits/examples/vectorstore",permalink:"/langchainjs/docs/modules/agents/toolkits/examples/vectorstore",draft:!1,editUrl:"https://github.com/hwchase17/langchainjs/docs/modules/agents/toolkits/examples/vectorstore.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"SQL Agent Toolkit",permalink:"/langchainjs/docs/modules/agents/toolkits/examples/sql"},next:{title:"Agents",permalink:"/langchainjs/docs/modules/agents/agents/"}},c={},l=[],p={toc:l},u="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"vectorstore-agent-toolkit"},"VectorStore Agent Toolkit"),(0,r.kt)("p",null,"This example shows how to load and use an agent with a vectorstore toolkit."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { OpenAI } from "langchain";\nimport { HNSWLib } from "langchain/vectorstores";\nimport { OpenAIEmbeddings } from "langchain/embeddings";\nimport { RecursiveCharacterTextSplitter } from "langchain/text_splitter";\nimport * as fs from "fs";\nimport {\n  VectorStoreToolkit,\n  createVectorStoreAgent,\n  VectorStoreInfo,\n} from "langchain/agents";\n\nexport const run = async () => {\n  const model = new OpenAI({ temperature: 0 });\n  /* Load in the file we want to do question answering over */\n  const text = fs.readFileSync("state_of_the_union.txt", "utf8");\n  /* Split the text into chunks */\n  const textSplitter = new RecursiveCharacterTextSplitter({ chunkSize: 1000 });\n  const docs = await textSplitter.createDocuments([text]);\n  /* Create the vectorstore */\n  const vectorStore = await HNSWLib.fromDocuments(docs, new OpenAIEmbeddings());\n\n  /* Create the agent */\n  const vectorStoreInfo: VectorStoreInfo = {\n    name: "state_of_union_address",\n    description: "the most recent state of the Union address",\n    vectorStore,\n  };\n\n  const toolkit = new VectorStoreToolkit(vectorStoreInfo, model);\n  const agent = createVectorStoreAgent(model, toolkit);\n\n  const input =\n    "What did biden say about Ketanji Brown Jackson is the state of the union address?";\n  console.log(`Executing: ${input}`);\n  const result = await agent.call({ input });\n  console.log(`Got output ${result.output}`);\n  console.log(\n    `Got intermediate steps ${JSON.stringify(\n      result.intermediateSteps,\n      null,\n      2\n    )}`\n  );\n};\n')))}m.isMDXComponent=!0}}]);