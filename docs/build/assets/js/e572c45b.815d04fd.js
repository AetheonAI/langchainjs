"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3776],{5318:(e,a,n)=>{n.d(a,{Zo:()=>c,kt:()=>f});var r=n(7378);function t(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function i(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?i(Object(n),!0).forEach((function(a){t(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function s(e,a){if(null==e)return{};var n,r,t=function(e,a){if(null==e)return{};var n,r,t={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],a.indexOf(n)>=0||(t[n]=e[n]);return t}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var p=r.createContext({}),o=function(e){var a=r.useContext(p),n=a;return e&&(n="function"==typeof e?e(a):l(l({},a),e)),n},c=function(e){var a=o(e.components);return r.createElement(p.Provider,{value:a},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},d=r.forwardRef((function(e,a){var n=e.components,t=e.mdxType,i=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=o(n),d=t,f=m["".concat(p,".").concat(d)]||m[d]||u[d]||i;return n?r.createElement(f,l(l({ref:a},c),{},{components:n})):r.createElement(f,l({ref:a},c))}));function f(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var i=n.length,l=new Array(i);l[0]=d;var s={};for(var p in a)hasOwnProperty.call(a,p)&&(s[p]=a[p]);s.originalType=e,s[m]="string"==typeof e?e:t,l[1]=s;for(var o=2;o<i;o++)l[o]=n[o];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5719:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>o});var r=n(5773),t=(n(7378),n(5318));const i={id:"agents_tools.internal.ZapiterNLAWrapperParams",title:"Interface: ZapiterNLAWrapperParams",sidebar_label:"agents/tools.internal.ZapiterNLAWrapperParams",custom_edit_url:null},l=void 0,s={unversionedId:"api/interfaces/agents_tools.internal.ZapiterNLAWrapperParams",id:"api/interfaces/agents_tools.internal.ZapiterNLAWrapperParams",title:"Interface: ZapiterNLAWrapperParams",description:"agents/tools.internal.ZapiterNLAWrapperParams",source:"@site/docs/api/interfaces/agents_tools.internal.ZapiterNLAWrapperParams.md",sourceDirName:"api/interfaces",slug:"/api/interfaces/agents_tools.internal.ZapiterNLAWrapperParams",permalink:"/langchainjs/docs/api/interfaces/agents_tools.internal.ZapiterNLAWrapperParams",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"agents_tools.internal.ZapiterNLAWrapperParams",title:"Interface: ZapiterNLAWrapperParams",sidebar_label:"agents/tools.internal.ZapiterNLAWrapperParams",custom_edit_url:null},sidebar:"sidebar",previous:{title:"agents/tools.internal.VectorStoreTool",permalink:"/langchainjs/docs/api/interfaces/agents_tools.internal.VectorStoreTool"},next:{title:"base_language.internal.AsyncCallerParams",permalink:"/langchainjs/docs/api/interfaces/base_language.internal.AsyncCallerParams"}},p={},o=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Properties",id:"properties",level:2},{value:"apiKey",id:"apikey",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"maxConcurrency",id:"maxconcurrency",level:3},{value:"Inherited from",id:"inherited-from",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"maxRetries",id:"maxretries",level:3},{value:"Inherited from",id:"inherited-from-1",level:4},{value:"Defined in",id:"defined-in-2",level:4}],c={toc:o},m="wrapper";function u(e){let{components:a,...n}=e;return(0,t.kt)(m,(0,r.Z)({},c,n,{components:a,mdxType:"MDXLayout"}),(0,t.kt)("p",null,(0,t.kt)("a",{parentName:"p",href:"/langchainjs/docs/api/modules/agents_tools"},"agents/tools"),".",(0,t.kt)("a",{parentName:"p",href:"/langchainjs/docs/api/modules/agents_tools.internal"},"internal"),".ZapiterNLAWrapperParams"),(0,t.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("a",{parentName:"p",href:"/langchainjs/docs/api/interfaces/base_language.internal.AsyncCallerParams"},(0,t.kt)("inlineCode",{parentName:"a"},"AsyncCallerParams"))),(0,t.kt)("p",{parentName:"li"},"\u21b3 ",(0,t.kt)("strong",{parentName:"p"},(0,t.kt)("inlineCode",{parentName:"strong"},"ZapiterNLAWrapperParams"))))),(0,t.kt)("h2",{id:"properties"},"Properties"),(0,t.kt)("h3",{id:"apikey"},"apiKey"),(0,t.kt)("p",null,"\u2022 ",(0,t.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,t.kt)("strong",{parentName:"p"},"apiKey"),": ",(0,t.kt)("inlineCode",{parentName:"p"},"string")),(0,t.kt)("h4",{id:"defined-in"},"Defined in"),(0,t.kt)("p",null,(0,t.kt)("a",{parentName:"p",href:"https://github.com/hwchase17/langchainjs/blob/0092eb5/langchain/src/agents/tools/zapier.ts#L23"},"langchain/src/agents/tools/zapier.ts:23")),(0,t.kt)("hr",null),(0,t.kt)("h3",{id:"maxconcurrency"},"maxConcurrency"),(0,t.kt)("p",null,"\u2022 ",(0,t.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,t.kt)("strong",{parentName:"p"},"maxConcurrency"),": ",(0,t.kt)("inlineCode",{parentName:"p"},"number")),(0,t.kt)("p",null,"The maximum number of concurrent calls that can be made.\nDefaults to ",(0,t.kt)("inlineCode",{parentName:"p"},"Infinity"),", which means no limit."),(0,t.kt)("h4",{id:"inherited-from"},"Inherited from"),(0,t.kt)("p",null,(0,t.kt)("a",{parentName:"p",href:"/langchainjs/docs/api/interfaces/base_language.internal.AsyncCallerParams"},"AsyncCallerParams"),".",(0,t.kt)("a",{parentName:"p",href:"/langchainjs/docs/api/interfaces/base_language.internal.AsyncCallerParams#maxconcurrency"},"maxConcurrency")),(0,t.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,t.kt)("p",null,(0,t.kt)("a",{parentName:"p",href:"https://github.com/hwchase17/langchainjs/blob/0092eb5/langchain/src/util/async_caller.ts#L9"},"langchain/src/util/async_caller.ts:9")),(0,t.kt)("hr",null),(0,t.kt)("h3",{id:"maxretries"},"maxRetries"),(0,t.kt)("p",null,"\u2022 ",(0,t.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,t.kt)("strong",{parentName:"p"},"maxRetries"),": ",(0,t.kt)("inlineCode",{parentName:"p"},"number")),(0,t.kt)("p",null,"The maximum number of retries that can be made for a single call,\nwith an exponential backoff between each attempt. Defaults to 6."),(0,t.kt)("h4",{id:"inherited-from-1"},"Inherited from"),(0,t.kt)("p",null,(0,t.kt)("a",{parentName:"p",href:"/langchainjs/docs/api/interfaces/base_language.internal.AsyncCallerParams"},"AsyncCallerParams"),".",(0,t.kt)("a",{parentName:"p",href:"/langchainjs/docs/api/interfaces/base_language.internal.AsyncCallerParams#maxretries"},"maxRetries")),(0,t.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,t.kt)("p",null,(0,t.kt)("a",{parentName:"p",href:"https://github.com/hwchase17/langchainjs/blob/0092eb5/langchain/src/util/async_caller.ts#L14"},"langchain/src/util/async_caller.ts:14")))}u.isMDXComponent=!0}}]);